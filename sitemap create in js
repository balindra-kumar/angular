const fs = require('fs');

const fetchdata =()=>{ 
    fetch("https://hinditerm.com/demo/post/read.php")
    .then(response => {
       return response.json();
       }).then(data => {
        writeSitemapFile(data, filePath)
    })
}
fetchdata()

// const data1 = [
//     {
//         loc: 'https://www.example.com/page1',
//         lastmod: '2026-05-18T10:30:00+05:30',
//         changefreq: 'weekly',
//         priority: '1.0'
//     },
//     {
//         loc: 'https://www.example.com/page2',
//         lastmod: '2024-05-17T15:45:00-08:00',
//         changefreq: 'weekly',
//         priority: '1.0'
//     },
//     // Add more URL objects as needed
//2021-05-26T17:16:39+00:00
// ];


function generateSitemapXml(data1) {
console.log(data1)
function changeTimeStamp(timestamp){
     // Convert to a Date object
const date = new Date(timestamp);
// Format the date to the desired string
return formattedTimestamp = date.toISOString().replace(/\.\d{3}Z$/, "+00:00");

}
  
    const xmlContent = `<?xml version="1.0" encoding="UTF-8"?>
    <urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
      ${data1.map(url => `

        <url>
          <loc>${url.post_cat}/${url.post_url}</loc>
          <lastmod>${changeTimeStamp(url.post_update_date)}</lastmod>
          <changefreq>weekly</changefreq>
          <priority>1.0</priority>
        </url>`).join('')}
    </urlset>`;
    return xmlContent;
}

function writeSitemapFile(data1, filePath) {
    const xmlContent = generateSitemapXml(data1);
    fs.writeFileSync(filePath, xmlContent);
    console.log('Sitemap generated successfully at:', filePath);
}



const filePath = './sitemap.xml'; // Adjust the file path as needed




in Angular ssr
================================


import { Component, OnInit } from '@angular/core';
import { RouterOutlet } from '@angular/router';
import { Injectable } from '@angular/core';
import * as fs from 'fs'
import { HttpClient, HttpClientModule } from '@angular/common/http';
@Component({
  selector: 'app-root',
  standalone: true,
  imports: [RouterOutlet,HttpClientModule],
  templateUrl: './app.component.html',
  styleUrl: './app.component.sass'
})
@Injectable({providedIn: 'root'})
export class AppComponent implements OnInit{
  title = 'sitemap';
  filePath = './sitemap.xml';
  constructor(private http:HttpClient){}

  ngOnInit(){
    this.fetchData();
  }
  alert(){
 // this.http.get('https')
  }

  fetchData(){
    fetch("https://hinditerm.com/demo/post/read.php")
    .then(response => {
       return response.json();
       }).then(data => {
        this.writeSitemapFile(data, this.filePath)
    })
  }

  writeSitemapFile(data1:any, filePath:string) {
    const xmlContent = this.generateSitemapXml(data1);
    fs.writeFile(filePath, xmlContent,(err)=>{
      console.log(err);
    });
    // fs.writeFileSync(filePath, xmlContent);
    console.log('Sitemap generated successfully at:', filePath);
}

 generateSitemapXml(data1:any) {
  console.log(data1)
  
    
      const xmlContent = `<?xml version="1.0" encoding="UTF-8"?>
      <urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
        ${data1.map((url:any) => `
  
          <url>
            <loc>${url.post_cat}/${url.post_url}</loc>
            <lastmod>${this.changeTimeStamp(url.post_update_date)}</lastmod>
            <changefreq>weekly</changefreq>
            <priority>1.0</priority>
          </url>`).join('')}
      </urlset>`;
      return xmlContent;
  }


   changeTimeStamp(timestamp:any){
    // Convert to a Date object
  const date = new Date(timestamp);
  // Format the date to the desired string
  return  date.toISOString().replace(/\.\d{3}Z$/, "+00:00");
  
  }
}





















